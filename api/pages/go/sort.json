{"title":"GoLang","uid":"f5478a18c644c3c98c5f6d87c9c13305","text":"AES加密示例package main import ( \"bytes\" \"crypto/aes\" \"crypto/cipher\" \"encoding/base64\" \"errors\" \"fmt\" ) //高级加密标准（Adevanced Encryption Standard ...","date":"2021-07-17T13:58:05.000Z","updated":"2022-07-15T09:25:08.516Z","comments":true,"path":"api/pages/go/sort.json","covers":null,"excerpt":"","content":"<h2 id=\"AES加密示例\"><a href=\"#AES加密示例\" class=\"headerlink\" title=\"AES加密示例\"></a>AES加密示例</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"bytes\"</span>\n\t<span class=\"token string\">\"crypto/aes\"</span>\n\t<span class=\"token string\">\"crypto/cipher\"</span>\n\t<span class=\"token string\">\"encoding/base64\"</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//高级加密标准（Adevanced Encryption Standard ,AES）</span>\n\n<span class=\"token comment\">//16,24,32位字符串的话，分别对应AES-128，AES-192，AES-256 加密方法</span>\n<span class=\"token comment\">//key不能泄露</span>\n<span class=\"token keyword\">var</span> PwdKey <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DIS**#KKKDJJSKDI\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">//PKCS7 填充模式</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">PKCS7Padding</span><span class=\"token punctuation\">(</span>ciphertext <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> blockSize <span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span> <span class=\"token punctuation\">&#123;</span>\n\tpadding <span class=\"token operator\">:=</span> blockSize <span class=\"token operator\">-</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>blockSize\n\t<span class=\"token comment\">//Repeat()函数的功能是把切片[]byte&#123;byte(padding)&#125;复制padding个，然后合并成新的字节切片返回</span>\n\tpadtext <span class=\"token operator\">:=</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">Repeat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">&#123;</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> padding<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span>ciphertext<span class=\"token punctuation\">,</span> padtext<span class=\"token operator\">...</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//填充的反向操作，删除填充字符串</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">PKCS7UnPadding</span><span class=\"token punctuation\">(</span>origData <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//获取数据长度</span>\n\tlength <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> length <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"加密字符串错误！\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//获取填充字符串长度</span>\n\t\tunpadding <span class=\"token operator\">:=</span> <span class=\"token function\">int</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">[</span>length<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">//截取切片，删除填充字节，并且返回明文</span>\n\t\t<span class=\"token keyword\">return</span> origData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>length <span class=\"token operator\">-</span> unpadding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//实现加密</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">AesEcrypt</span><span class=\"token punctuation\">(</span>origData <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> key <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//创建加密算法实例</span>\n\tblock<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> aes<span class=\"token punctuation\">.</span><span class=\"token function\">NewCipher</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//获取块的大小</span>\n\tblockSize <span class=\"token operator\">:=</span> block<span class=\"token punctuation\">.</span><span class=\"token function\">BlockSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//对数据进行填充，让数据长度满足需求</span>\n\torigData <span class=\"token operator\">=</span> <span class=\"token function\">PKCS7Padding</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">,</span> blockSize<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//采用AES加密方法中CBC加密模式</span>\n\tblocMode <span class=\"token operator\">:=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">NewCBCEncrypter</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>blockSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\tcrypted <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//执行加密</span>\n\tblocMode<span class=\"token punctuation\">.</span><span class=\"token function\">CryptBlocks</span><span class=\"token punctuation\">(</span>crypted<span class=\"token punctuation\">,</span> origData<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">return</span> crypted<span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//实现解密</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">AesDeCrypt</span><span class=\"token punctuation\">(</span>cypted <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> key <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//创建加密算法实例</span>\n\tblock<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> aes<span class=\"token punctuation\">.</span><span class=\"token function\">NewCipher</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//获取块大小</span>\n\tblockSize <span class=\"token operator\">:=</span> block<span class=\"token punctuation\">.</span><span class=\"token function\">BlockSize</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//创建加密客户端实例</span>\n\tblockMode <span class=\"token operator\">:=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">NewCBCDecrypter</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>blockSize<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\torigData <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>cypted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//这个函数也可以用来解密</span>\n\tblockMode<span class=\"token punctuation\">.</span><span class=\"token function\">CryptBlocks</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">,</span> cypted<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">//去除填充字符串</span>\n\torigData<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> <span class=\"token function\">PKCS7UnPadding</span><span class=\"token punctuation\">(</span>origData<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> origData<span class=\"token punctuation\">,</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//加密base64</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">EnPwdCode</span><span class=\"token punctuation\">(</span>pwd <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tresult<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">AesEcrypt</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">,</span> PwdKey<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> base64<span class=\"token punctuation\">.</span>StdEncoding<span class=\"token punctuation\">.</span><span class=\"token function\">EncodeToString</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> err\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//解密</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">DePwdCode</span><span class=\"token punctuation\">(</span>pwd <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//解密base64字符串</span>\n\tpwdByte<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> base64<span class=\"token punctuation\">.</span>StdEncoding<span class=\"token punctuation\">.</span><span class=\"token function\">DecodeString</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token comment\">//执行AES解密</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">AesDeCrypt</span><span class=\"token punctuation\">(</span>pwdByte<span class=\"token punctuation\">,</span> PwdKey<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\tstr <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12fff我是ww.topgoer.com的站长枯藤\"</span><span class=\"token punctuation\">)</span>\n\tpwd<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> <span class=\"token function\">EnPwdCode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span>\n\tbytes<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> <span class=\"token function\">DePwdCode</span><span class=\"token punctuation\">(</span>pwd<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">string</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#AES%E5%8A%A0%E5%AF%86%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">AES加密示例</span></a></li></ol>"}